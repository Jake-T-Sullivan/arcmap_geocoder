import requests 
import json  

api_key = #google geocodeapi here

url = "https://maps.googleapis.com/maps/api/geocode/json?address="

def ZoomToExtent(ne_x, ne_y, sw_x, sw_y):
    mxd = arcpy.mapping.MapDocument('CURRENT')
    dataFrame = arcpy.mapping.ListDataFrames(mxd)[0]
    
    #api only returns coords in wgs84. dataframe spatial reference must be temporarily changed to pan to location
    
    original_sr = dataFrame.spatialReference
    wgs84_sr = arcpy.SpatialReference(4326)
    dataFrame.spatialReference = wgs84_sr
    
    extent = arcpy.Extent(ne_y,sw_x,sw_y,ne_x)
    dataFrame.extent = extent
    arcpy.RefreshActiveView()
    dataFrame.spatialReference = original_sr
    

def geocode(address):
    json_cord = requests.get(url + address +"&key="+ api_key) #api call
    json_file = json.loads(json_cord.content)
    
    for p in json_file["results"]:
        try:
            print(p["geometry"])
            ne_x = p["geometry"]["bounds"]["northeast"]["lat"]
            ne_y = p["geometry"]["bounds"]["northeast"]["lng"]
            sw_x = p["geometry"]["bounds"]["southwest"]["lat"]
            sw_y = p["geometry"]["bounds"]["southwest"]["lng"]
        except:
            ne_x = p["geometry"]["viewport"]["northeast"]["lat"]
            ne_y = p["geometry"]["viewport"]["northeast"]["lng"]
            sw_x = p["geometry"]["viewport"]["southwest"]["lat"]
            sw_y = p["geometry"]["viewport"]["southwest"]["lng"]

    ZoomToExtent(ne_x, ne_y, sw_x, sw_y)
